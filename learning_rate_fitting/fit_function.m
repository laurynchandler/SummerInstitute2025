function [loglikelihood gobj hess] = fit_function(function_string, sub_data, alpha)
%%%% fits a regression model to RTs during learning using predictors generated by the script corresponding to function_string
%%%% INPUTS
% function_string: what function you want the script to call (string)
% sub_data: a single subject's learning data
% alpha: the parameter whose value we are trying to estimate

%% setup
loglikelihood = 0;
residual = 0;
regression_function = str2func(function_string); 
Xreg = regression_function(sub_data, alpha); 
Yrts = sub_data.imgLockedRT;

[B, BI, residual, RINT, STATS] = regress(Yrts, Xreg); % this predicts image-locked RT using the regression matrix generated by regression_function

% Have to compute R in a pderiv-friendly way
residual = Xreg*B - Yrts; % this computes the residuals for the model
loglikelihood = loglik(residual); % this takes the log-likelihood of the residuals

gobj = 0; 
hess = 0;
end
